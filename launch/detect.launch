<launch>

  <arg name="simulation" default="$(eval env('RUN_TYPE') == 'simulation')" />

  <arg name="uav_name" default="$(optenv UAV_NAME uav)"/>
  <arg name="respawn" default="false" />

  <arg name="rosbag_remap" default="false" />
  <arg unless="$(arg rosbag_remap)" name="suf" value=""/>
  <arg     if="$(arg rosbag_remap)" name="suf" value="_"/>

  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value=""/>
  <arg     if="$(arg debug)" name="launch_prefix" value="debug_roslaunch"/>

  <arg name="profile" default="false" />
  <arg unless="$(arg profile)" name="launch_prefix_profile" value=""/>
  <arg     if="$(arg profile)" name="launch_prefix_profile" value="valgrind --tool=callgrind --callgrind-out-file='callgrind.out.%p'"/>

  <arg name="world_frame_id" default="$(arg uav_name)/rtk_origin" />

  <arg name="apriori_map_config_filename" default="$(find vofod)/config/apriori_maps/sim.yaml" />
  <arg name="apriori_map_filename" default="" />
  <arg name="apriori_frame_id" default="$(arg uav_name)/rtk_origin" />

  <arg name="sensor_config_filename" default="$(find vofod)/config/sensors/os1-128.yaml" />
  <arg name="sensor_check_consistency" default="true" />

  <arg name="mask_filename" default="" />

  <arg name="rangefinder_topic" default="garmin/range" />

  <!-- nodelet-related arguments -->
  <arg name="standalone" default="true" />
  <arg name="manager" default="detection_nodelet_manager" />
  <arg name="det_nodelet" value="vofod/VoFOD" />
  <arg unless="$(arg standalone)" name="nodelet_load" value="load $(arg det_nodelet) $(arg manager)"/>
  <arg     if="$(arg standalone)" name="nodelet_load" value="standalone $(arg det_nodelet)"/>

  <group ns="$(arg uav_name)">

    <node pkg="nodelet" type="nodelet" name="vofod" args="$(arg nodelet_load)" output="screen" launch-prefix="$(arg launch_prefix) $(arg launch_prefix_profile)" respawn="$(arg respawn)" >
      
      <param name="sensor/simulation" value="$(arg simulation)" />
      <param name="sensor/check_consistency" value="$(arg sensor_check_consistency)" />
      <rosparam file="$(arg sensor_config_filename)" />

      <param name="uav_name" value="$(arg uav_name)" />
      <param name="world_frame_id" value="$(arg world_frame_id)" />
      <param name="apriori_frame_id" value="$(arg apriori_frame_id)" />
      <param name="ground_enforcing/static_frame_id" value="$(arg world_frame_id)" />
      <param name="raycast/mask_filename" value="$(arg mask_filename)" />
      <param name="static_cloud_filename" value="$(arg apriori_map_filename)" />
      <rosparam file="$(arg apriori_map_config_filename)" />
      <rosparam file="$(find vofod)/config/detection_params.yaml" />
      <rosparam file="$(find vofod)/config/visualization.yaml" />
    
      <!-- Subscribers -->
      <remap from="~pointcloud" to="os_cloud_nodelet_deskewed/points_deskewed" />
      <remap from="~height_rangefinder" to="$(arg rangefinder_topic)" />
      <remap from="~tsdf_layer_in" to="voxblox_node/tsdf_map_out" />

      <!-- Publishers -->
      <remap from="~rangefinder_pc" to="~rangefinder_pc$(arg suf)" />
      <remap from="~lidar_fov" to="~lidar_fov$(arg suf)" />
      <remap from="~apriori_pc" to="~apriori_pc$(arg suf)" />

      <remap from="~background_clusters_pc" to="~background_clusters_pc$(arg suf)" />
      <remap from="~freecloud_pc" to="~freecloud_pc$(arg suf)" />

      <remap from="~background_pc" to="~background_pc$(arg suf)" />
      <remap from="~classification_max_distance" to="~classification_max_distance$(arg suf)" />
      <remap from="~detected_groundplane" to="~detected_groundplane$(arg suf)" />
      <remap from="~detections" to="~detections$(arg suf)" />
      <remap from="~detections_dbg" to="~detections_dbg$(arg suf)" />
      <remap from="~detections_mks" to="~detections_mks$(arg suf)" />
      <remap from="~detections_pc" to="~detections_pc$(arg suf)" />
      <remap from="~filtered_input_pc" to="~filtered_input_pc$(arg suf)" />
      <remap from="~frontiers_mks" to="~frontiers_mks$(arg suf)" />
      <remap from="~lidar_raycast" to="~lidar_raycast$(arg suf)" />
      <remap from="~operation_area" to="~operation_area$(arg suf)" />
      <remap from="~operation_area_array" to="~operation_area_array$(arg suf)" />
      <remap from="~sepclusters_pc" to="~sepclusters_pc$(arg suf)" />
      <remap from="~status" to="~status$(arg suf)" />
      <remap from="~sure_air_pc" to="~sure_air_pc$(arg suf)" />
      <remap from="~update_flags" to="~update_flags$(arg suf)" />
      <remap from="~voxel_map" to="~voxel_map$(arg suf)" />
      <remap from="~weighted_input_pc" to="~weighted_input_pc$(arg suf)" />

      <!-- Services -->
      <remap from="~reset" to="~reset" />
      <remap from="~get_metadata" to="os_nodelet/get_metadata" />

    </node>
  
  </group>

</launch>
